{"remainingRequest":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\src\\components\\BaseNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\src\\components\\BaseNav.vue","mtime":1585678574000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NavbarToggleButton from \"./NavbarToggleButton\";\nexport default {\n  name: \"base-nav\",\n  components: {\n    NavbarToggleButton: NavbarToggleButton\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"\",\n      description: \"Navbar type (e.g default, primary etc)\"\n    },\n    title: {\n      type: String,\n      default: \"\",\n      description: \"Title of navbar\"\n    },\n    contentId: {\n      type: [String, Number],\n      default: Math.random().toString(),\n      description: \"Explicit id for the menu. By default it's a generated random number\"\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container-fluid'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar is transparent\"\n    },\n    expand: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar should contain `navbar-expand-lg` class\"\n    },\n    showToggleButton: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      toggled: false\n    };\n  },\n  methods: {\n    closeMenu: function closeMenu() {\n      this.toggled = false;\n    }\n  }\n};",{"version":3,"sources":["BaseNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KADA;AAMA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KANA;AAWA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA,IAAA,CAAA,MAAA,GAAA,QAAA,EAFA;AAGA,MAAA,WAAA,EACA;AAJA,KAXA;AAiBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KArBA;AA0BA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KA1BA;AA+BA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA/BA,GALA;AAyCA,EAAA,IAzCA,kBAyCA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,OAAA,GAAA,KAAA;AACA;AAHA;AA9CA,CAAA","sourcesContent":["<template>\n    <nav class=\"navbar\"\n         :class=\"[\n            {'navbar-expand-md': expand},\n            {'navbar-transparent': transparent},\n            {[`bg-${type}`]: type}\n         ]\">\n        <div :class=\"containerClasses\">\n            <slot name=\"brand\">\n                <router-link :to=\"$route.path\"\n                             class=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\">\n                    {{$route.name}}\n                </router-link>\n            </slot>\n            <navbar-toggle-button v-if=\"showToggleButton\"\n                                  :toggled=\"toggled\"\n                                  :target=\"contentId\"\n                                  @click.native.stop=\"toggled = !toggled\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </navbar-toggle-button>\n\n            <div class=\"collapse navbar-collapse\"\n                 :class=\"{show: toggled}\"\n                 :id=\"contentId\"\n                 v-click-outside=\"closeMenu\">\n\n                <slot :close-menu=\"closeMenu\"></slot>\n            </div>\n        </div>\n    </nav>\n</template>\n<script>\n  import NavbarToggleButton from \"./NavbarToggleButton\";\n\n  export default {\n    name: \"base-nav\",\n    components: {\n      NavbarToggleButton\n    },\n    props: {\n      type: {\n        type: String,\n        default: \"\",\n        description: \"Navbar type (e.g default, primary etc)\"\n      },\n      title: {\n        type: String,\n        default: \"\",\n        description: \"Title of navbar\"\n      },\n      contentId: {\n        type: [String, Number],\n        default: Math.random().toString(),\n        description:\n          \"Explicit id for the menu. By default it's a generated random number\"\n      },\n      containerClasses: {\n        type: [String, Object, Array],\n        default: 'container-fluid'\n      },\n      transparent: {\n        type: Boolean,\n        default: false,\n        description: \"Whether navbar is transparent\"\n      },\n      expand: {\n        type: Boolean,\n        default: false,\n        description: \"Whether navbar should contain `navbar-expand-lg` class\"\n      },\n      showToggleButton: {\n        type: Boolean,\n        default: true\n      }\n    },\n    data() {\n      return {\n        toggled: false\n      };\n    },\n    methods: {\n      closeMenu() {\n        this.toggled = false;\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}