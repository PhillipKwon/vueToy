{"remainingRequest":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\src\\components\\BaseSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\src\\components\\BaseSwitch.vue","mtime":1585678574000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace3\\vueToy\\vue-argon-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"base-switch\",\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Boolean,\n      default: false,\n      description: \"Switch value\"\n    }\n  },\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit(\"input\", value);\n      }\n    }\n  }\n};\n",{"version":3,"sources":["BaseSwitch.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseSwitch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <label class=\"custom-toggle\">\n        <input type=\"checkbox\"\n               v-model=\"model\"\n               v-bind=\"$attrs\"\n               v-on=\"$listeners\">\n        <span class=\"custom-toggle-slider rounded-circle\"></span>\n    </label>\n</template>\n<script>\nexport default {\n  name: \"base-switch\",\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Boolean,\n      default: false,\n      description: \"Switch value\"\n    }\n  },\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit(\"input\", value);\n      }\n    }\n  }\n};\n</script>\n<style>\n</style>\n"]}]}